'use strict';

const APIRequest = require('./APIRequest');
const routeBuilder = require('./APIRouter');
const RequestHandler = require('./RequestHandler');
const { Error } = require('../errors');
const Collection = require('../util/Collection');
const { Endpoints } = require('../util/Constants');

class RESTManager {
  constructor(client, tokenPrefix = '') {
    this.client = client;
    this.handlers = new Collection();
    //console.log("POOPIE");
    //console.log(this.handlers);
    this.tokenPrefix = tokenPrefix;
    this.versioned = true;
    this.globalTimeout = null;
    if (client.options.restSweepInterval > 0) {
      client.setInterval(() => {
        this.handlers.sweep(handler => handler._inactive);
      }, client.options.restSweepInterval * 1000);
    }
  }

  get api() {
    return routeBuilder(this);
  }

  getAuth() {
    const token = this.client.token || this.client.accessToken;
    if (token) return `${this.tokenPrefix} ${token}`;
    throw new Error('TOKEN_MISSING');
  }

  get cdn() {
    return Endpoints.CDN(this.client.options.http.cdn);
  }

  push(handler, apiRequest) {
//  console.log("LOLITALOLITALOLITA")
if(apiRequest.route == '/gateway/bot'){
apiRequest.route = '/gateway'
}

if(apiRequest.path == '/gateway/bot'){
apiRequest.path = '/gateway'

}
if(apiRequest.rest.tokenPrefix == 'Bot'){
//console.log("On refait le prefix")
apiRequest.tokenPrefix = ''

}


  //console.log(apiRequest)
  //console.log("LOLITALOLITALOLITA")
    return new Promise((resolve, reject) => {
      handler
        .push({
          request: apiRequest,
          resolve,
          reject,
          retries: 0,
        })
        .catch(reject);
    });
  }

  request(method, url, options = {}) {
   // console.log(method)
   // console.log(url)
   // console.log(options)
  //console.log("on va recup l'url")
  //console.log(url)
      if(options.route == '/gateway/bot'){
        //console.log("on refait ca")
	options.route = '/gateway'
      }
    const apiRequest = new APIRequest(this, method, url, options);
    let handler = this.handlers.get(apiRequest.route);
    //console.log("APRES LAPI REQUEST")
    if (!handler) {
      //console.log("creation du handler")
      //console.log(this)
      handler = new RequestHandler(this);
      //console.log("handler crees")
      //console.log(handler)
      //console.log("poopiepoopiepoo")
      //console.log(options.route)
//      if(apiRequest.route == '/gateway/bot'){
  //    console.log("on refait ca")
//	apiRequest.route = '/gateway'
  //    }

      this.handlers.set(apiRequest.route, handler);
    }
    //console.log(handler)

    return this.push(handler, apiRequest);
  }

  set endpoint(endpoint) {
    this.client.options.http.api = endpoint;
  }
}

module.exports = RESTManager;
